<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.wenda.dao.MessageDao">
	<sql id="message_fields">id,from_id,to_id,content,conversation_id,created_date,has_read </sql>
	
	<insert id="addMessage">
		insert into message(from_id,to_id,content,conversation_id,created_date,has_read)
			values(#{fromId},#{toId},#{content},#{conversationId},#{createdDate},#{hasRead});	
	</insert>
	
	<select id="getConversationDetail" resultMap="message">
		select <include refid="message_fields"/>
		from message
		where conversation_id=#{conversationId} 
		order by created_date desc
	</select>
	<select id="getConversationUnreadCount" resultType="java.lang.Integer">
		select count(id)
		from message
		where has_read=0 and to_id=#{userId} and conversation_id=#{conversationId}
	</select>
	<select id="getConversationList" resultMap="message">
		select <include refid="message_fields"/>,count(id)
		from (select * from message order by created_date desc) t
		group by conversation_id order by created_date desc
	</select>
	<update id="updateMessage">
		update message set has_read=#{hasRead}
		where id=#{id} 
	</update>
	
	<resultMap type="cn.wenda.model.Message" id="message">
		<id property="id" column="id"/>
		<result column="from_id" property="fromId"/>
		<result column="to_id" property="toId"/>
		<result column="content" property="content"/>
		<result column="conversation_id" property="conversationId"/>
		<result column="created_date" property="createdDate"/>
		<result column="has_read" property="hasRead"/>
		
	</resultMap>
	
	
</mapper>